name: "ESExtractor native build"
run-name: Native build by ${{ github.actor }}
on:
  workflow_dispatch:
  workflow_call:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
env:
  REPO_NAME: ESExtractor

jobs:
  ci-linux-x86_64:
    runs-on: ubuntu-22.04

    env:
      PLATFORM: linux-x86_64
      TERM: dumb

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "DESTDIR=$REPO_NAME-release" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install --assume-yes --no-install-recommends meson  valgrind

      - name: Configure
        run: meson setup builddir --default-library=both

      - name: Build
        run: meson compile --verbose -C builddir

      - name: Test
        run: |
          meson test --num-processes=1 --wrap=${GITHUB_WORKSPACE}/valgrind/valgrind.sh --verbose --timeout-multiplier=2 -C builddir

      - name: Install
        run: ninja -C builddir install

      - name: Create zip
        shell: bash
        run: |
          pushd builddir/
          zip -r ../$REPO_NAME-release-$PLATFORM.zip $REPO_NAME-release
          popd

      - name: Upload linux release
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.REPO_NAME }}-release-${{ env.PLATFORM }}
          path: ${{ env.REPO_NAME }}-release-${{ env.PLATFORM }}.zip

  ci-win64:
    runs-on: windows-latest

    env:
      PLATFORM: windows-x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set environment variables
        run: echo "DESTDIR=$Env:REPO_NAME-release" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - name: Install dependencies
        run: |
          choco install --yes zip

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install meson
        run: python -m pip install meson ninja

      - name: Configure
        run: meson setup --vsenv builddir --default-library=both

      - name: Build
        run: meson compile --verbose -C builddir

      # FIXME: test aren't executed
      #- name: Test
      #  run: meson test --verbose -C builddir

      - name: Install
        shell: bash
        run: |
          ninja -C builddir install

      - name: Create zip
        shell: bash
        run: |
          pushd builddir/
          zip -r ../$REPO_NAME-release-$PLATFORM.zip $REPO_NAME-release
          popd

      - name: Upload windows release
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.REPO_NAME }}-release-${{ env.PLATFORM }}
          path: ${{ env.REPO_NAME }}-release-${{ env.PLATFORM }}.zip
